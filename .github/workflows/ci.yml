name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: server/package-lock.json
      
      - name: Install backend dependencies
        working-directory: ./server
        run: npm ci
      
      - name: Run backend tests
        working-directory: ./server
        env:
          MONGO_URI_TEST: mongodb://localhost:27017/edunexus_test
          JWT_SECRET: test_secret_key
          NODE_ENV: test
        run: npm test
  
  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json
      
      - name: Install frontend dependencies
        working-directory: ./client
        run: npm ci
      
      - name: Run frontend tests
        working-directory: ./client
        run: npm test
      
      - name: Build frontend
        working-directory: ./client
        run: npm run build
  
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: |
          cd server && npm ci
          cd ../client && npm ci
      
      - name: Run ESLint (Backend)
        working-directory: ./server
        run: npx eslint . --ext .js --max-warnings 10 || true
      
      - name: Run ESLint (Frontend)
        working-directory: ./client
        run: npm run lint || true
  
  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: |
          cd server && npm ci
          cd ../client && npm ci
      
      - name: Build frontend
        working-directory: ./client
        run: npm run build
      
      - name: Test backend starts
        working-directory: ./server
        env:
          MONGO_URI: mongodb://localhost:27017/edunexus_test
          JWT_SECRET: test_secret_key
          NODE_ENV: production
        run: |
          timeout 10s node index.js || code=$?
          if [[ $code -ne 124 && $code -ne 0 ]]; then
            exit $code
          fi